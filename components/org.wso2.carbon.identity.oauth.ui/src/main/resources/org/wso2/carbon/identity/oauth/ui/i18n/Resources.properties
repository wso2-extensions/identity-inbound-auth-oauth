#
# Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# WSO2 Inc. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
#
identity.oauth=OAuth
oauth.management=OAuth Management
add.new.application=Register New Application
available.applications=Available Applications
error.while.loading.user.application.data=Error occurred while reading OAuth application data
remove.app=Remove Application
no.apps=No Registered Applications
remove.message1=You are about to remove 
remove.message2=. Do you want to proceed?
application.name=Application Name
oauth.version=OAuth Version
callback=Callback Url
loginPage=Login Page
errorPage=Error Page
consentPage=Consent Page
grantTypes=Allowed Grant Types
scopeValidators=Scope Validators
accessTokenTypes=Token Issuer
pkce.mandatory=PKCE Mandatory
pkce.support.plain=Support PKCE 'Plain' Transform Algorithm
pkce.mandatory.hint=Only allow applications that bear PKCE Code Challenge with them.
pkce.support.plain.hint=Server supports 'S256' PKCE tranformation algorithm by default.
new.app=New Application
app.added.successfully=Application registered successfully
error.while.adding.app=Error occurred while adding the application
view.application=View/Update application settings
cancel=Cancel
update=Update
consumerkey.oauth10a=Consumer Key
consumersecret.oauth10a=Consumer Secret
consumerkey.oauth20=Client Id
consumersecret.oauth20=Client Secret
accesstoken=Access Token Url
authorizeurl=Authorize Url
requesttokenurl=Request Token Url
callback.is.required=Callback Url is required
callback.is.not.https=Provided callback URL is not a https URL. Do you want to proceed?
callback.is.fragment=Invalid callback URL. Callback URL cannot contain a fragment component.
callback.is.not.url=Invalid URI for Callback URL
application.is.required=Application name is required
app.updated.successfully=Application updated successfully
error.while.updating.app=Error occurred while updating the application
error.while.getting.allowed.grants=Error occurred while retrieving allowed grant types
error.while.getting.scope.validators=Error occurred while retrieving scope validators
app.removed.successfully=Application removed successfully
error.while.removing.app=Error occurred while removing the application
delete=Delete
edit=Edit
add=Add
app.settings=Application Settings
oauth.login=OAuth Login
username.required=User name cannot be empty
password.required=Please enter your password
oauth.signin.message=requires access to 
allow=Allow
deny=Deny
user.name=User Name
password=Password
auth.error=Authentication failure
oauth.processing.error=OAuth Processing Error
oauth.processing.error.msg=Error when processing OAuth request. Please try again later.
identity.my.authorized.apps=My Authorized Apps
my.authorized.apps=My Authorized Applications
no.oauth.apps=No authorized applications
error.while.loading.apps=Error while loading authorized applications
authorized.apps=Authorized Applications
application.developer=Application Developer
actions=Actions
error.while.revoking.authorization=Error while revoking authorization for {0}
revocation.success=Authorization successfully revoked for {0}
next=Next
prev=prev
user.access.token.expiry.time=User Access Token Expiry Time
application.access.token.expiry.time=Application Access Token Expiry Time
refresh.token.expiry.time=Refresh Token Expiry Time
id.token.expiry.time=Id Token Expiry Time
invalid.user.access.token.expiry.time=Invalid value for User Access Token Expiry Time
invalid.application.access.token.expiry.time=Invalid value for Application Access Token Expiry Time
invalid.refresh.token.expiry.time=Invalid value for Refresh Token Expiry Time
invalid.id.token.expiry.time=Invalid value for Id Token Expiry Time
seconds=seconds
oauth.add.audience=Add
sp.audience=Audience
enable.audience.restriction=Enable Audience Restriction
duplicate.audience.value=Audience value already added
logout.mechasnism=Logout Mechanism
logout.url=Backchannel Logout Url
logout.url.is.fragment=Invalid Logout URL. Logout URL cannot contain a fragment component.
logout.is.not.url=Invalid URI for OIDC Backchannel Logout URL.
logout.is.not.https.url=Invalid URI for OIDC Frontchannel Logout. HTTPS URI required.
no.logout.mechanism=None
oidc.backchannel.logout=Enable OIDC Backchannel Logout
oidc.frontchannel.logout=OIDC Frontchannel Logout
enable.id.token.encryption=Enable ID Token Encryption
enable.request.object.signature.validation=Enable Request Object Signature Validation
id.token.encryption.algorithm=Encryption Algorithm
id.token.encryption.method=Encryption Method
add.scope=Add New Scopes and Claims
scope.name=Scope Name
select.oidc.claims=Select OIDC Claims
add.claim=Add OIDC Claim
enter.oidc.scope.claim.details=Enter OIDC Scope Claim Details
oidc.claims=Enter OIDC Claims
finish=Finish
remove=Remove
title.list.scope=List OIDC scopes
list.scope=OIDC scopes
field.claim.id=Claim Name
scope.action=Action
view.claims=View claims
title.list.claims=Edit associated OIDC claims for the scope
oidc.claim.url=OIDC claims
edit.oidc.claims=Edit OIDC claims
remove.oidc.claims=Remove OIDC claims
no.claims.found=Can not find any associated oidc claims.
back=Back
scope.is.existing=Error while adding the scope. The scope {0} is already existing.
error.while.saving.scope.info=Error occured while saving scope {0}
error.while.loading.oidc.claims=Error occured while loading oidc claims. Error: {0}
scope.add.successful=The scope {0} is added successfully.
error.while.deleting.scope=Error occured while deleting the scope {0}
no.scope.registered=Can not find any registerd OIDC scopes.
updated.the.scope.successfully=Updated the scope {0} with new claims.
failed.to.update.the.scope=Error occured while updating the scope {0} with new claims.
error.while.adding.claims=Error occured while adding OIDC claims.
scope.name.cannot.be.empty=Scope name cannot be empty.
scope.without.claims=Claims cannot be empty.
scope.claim.mapping.is.already.existing=Error while editing the scope. The scope claim mapping is already existing.
add.new.scope=Add scope.
error.while.listing.scopes=Error while listing OIDC scopes.
add.claims=Add claims
error.while.editing.claims=Error while editing claims.
bypassclientcreds.support.plain=Allow authentication without the client secret
bypassclientcreds.support.plain.hint=This option will allow the client to authenticate without a client secret
renew.refresh.token.per.app=Renew Refresh Token
renew.refresh.token.per.app.hint=This option will issue a new refresh token per request when Refresh Token Grant is used.
access.token.binding.type=Access Token Binding Type
